name: CI / CD

on:
  push:
    branches: [master]

jobs:

  docker:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        context: [app, database, payment_gateway, reverse_proxy]

    steps:
      - name: checkout-repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image ${{ matrix.context }}
        uses: docker/build-push-action@v2
        with:
          context: ./${{ matrix.context }}
          push: true
          tags: ana8os8mo/${{ matrix.context }}:latest, ana8os8mo/${{ matrix.context }}:${{ github.sha }} 

  # deploy:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v2
      
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-2
      
  #     - name: Check if the instance is running
  #       run: | 
  #         state=`(aws ec2 describe-instance-status --instance-id ${{ secrets.PYC_INSTANCE_ID }}) | grep -w "running" | wc -l`;
  #         if [ "$state" -eq 0 ]; then aws ec2 start-instances --instance-ids ${{ secrets.PYC_INSTANCE_ID }}; fi
      
  #     - name: Transfer files via ssh key
  #       uses: appleboy/scp-action@master
  #       with:      
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.INSTANCE_USERNAME }}
  #         key: ${{ secrets.INSTANCE_KEY }}
  #         source: "./docker-compose.yml, ./devsecrets"
  #         target: "/home/${{ secrets.INSTANCE_USERNAME }}"

  #     - name: executing remote ssh commands using key
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.INSTANCE_USERNAME }}
  #         key: ${{ secrets.INSTANCE_KEY }}
  #         script: |
  #               docker-compose up -d
  #     - name: Trigger end to end tests
  #       run: |
  #         curl --request POST \ 
  #         --url https://api.github.com/repos/crmejiam/atsea-sample-app-tests/dispatches \
  #         --header 'authorization: Bearer ${{ secrets.ACCESS_TOKEN }}' \
  #         --header 'Accept: application/vnd.github.v3+json' \
  #         --data '{
  #           "event_type": "deployed"
  #           }' \
  #         --fail